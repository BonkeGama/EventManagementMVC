@using OlwandleHotel.Models
@{
    Layout = "~/Views/Shared/newlwayout.cshtml";
}

@if (Session["cart"] == null)
{
    <div class="alert alert-danger">
        <strong>No product added to cart!</strong>
    </div>

}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Line Total</th>

            </tr>
        </thead>
        <tbody>
            @{
                int Total = 0;
            }
            @foreach (Item item in (List<Item>)Session["cart"])
            {
                int lineTotal = Convert.ToInt32(item.Quantity * item.Product.Price);
                Total = Convert.ToInt32(@Total + lineTotal);

                Session["SesTotal"] = Total;

                <tr>
                    <td>@item.Product.ProductName</td>
                    <td>@item.Product.Price</td>
                    <td>@item.Quantity</td>
                    <td>@lineTotal</td>
                </tr>
            }

            <tr>
                <td colspan="4" class="text-right"><b>Total: @Total</b></td>

            </tr>
        </tbody>
    </table>


    <div id="smart-button-container">
        <div style="text-align: center;">
            <div id="paypal-button-container"></div>
        </div>
    </div>
    <a href="@Url.Action("", "")" class="btn btn-success">>> Alternative payment <<</a>
    <script src="https://www.paypal.com/sdk/js?client-id=sb&currency=USD" data-sdk-integration-source="button-factory"></script>
    

}

<script>
    function initPayPalButton() {
        paypal.Buttons({
            style: {
                shape: 'rect',
                color: 'gold',
                layout: 'vertical',
                label: 'paypal',

            },

            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{ "amount": { "currency_code": "USD", "value": 1 } }]
                });
            },

            onApprove: function (data, actions) {
                return actions.order.capture().then(function (details) {
                    alert('Transaction completed by ' + details.payer.name.given_name + '!');
                });
            },

            onError: function (err) {
                console.log(err);
            }
        }).render('#paypal-button-container');
    }
    initPayPalButton();
</script>